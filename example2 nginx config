##This is on Server 2##

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    proxy_buffering off;        # Sends data as fast as it can not buffering large chunks.

    server_name example2.com;

    ##SSL##

    ssl_certificate /etc/nginx/ssl/live/example2.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/example2.com/privkey.pem;

    include /etc/nginx/conf.d/ssl_config;

    ##Location##

    set $upstream_authelia-skyflix https://auth.example2.com/api/verify;

    location /authelia-skyflix {
        internal;
        proxy_pass_request_body off;
        proxy_pass $upstream_authelia-skyflix;
        proxy_set_header Content-Length "";
    
        # Timeout if the real server is dead
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        client_body_buffer_size 128k;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Ssl on;
        proxy_redirect  http://  $scheme://;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache_bypass $cookie_session;
        proxy_no_cache $cookie_session;
        proxy_buffers 4 32k;
    
        # Advanced Proxy Config
        send_timeout 5m;
        proxy_read_timeout 240;
        proxy_send_timeout 240;
        proxy_connect_timeout 240;
}
  
   location / {
      set $upstream_example2 http://172.19.0.52:80;
      proxy_pass $upstream_example2;

      #auth.conf
      auth_request /authelia;
      auth_request_set $target_url https://$http_host$request_uri;
      auth_request_set $user $upstream_http_remote_user;
      auth_request_set $groups $upstream_http_remote_groups;
      auth_request_set $name $upstream_http_remote_name;
      auth_request_set $email $upstream_http_remote_email;
      proxy_set_header Remote-User $user;
      proxy_set_header Remote-Groups $groups;
      proxy_set_header Remote-Name $name;
      proxy_set_header Remote-Email $email;
      error_page 401 =302 https://auth.example2.com/?rd=$target_url;
  
      #proxy.conf
      client_body_buffer_size 128k;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
      
      # Advanced Proxy Config
      send_timeout 5m;
      proxy_read_timeout 360;
      proxy_send_timeout 360;
      proxy_connect_timeout 360;
      
      # Basic Proxy Config
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Uri $request_uri;
      proxy_set_header X-Forwarded-Ssl on;
      # proxy_set_header X-Real-IP $http_CF_Connecting_IP;
      proxy_redirect  http://  $scheme://;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_cache_bypass $cookie_session;
      proxy_no_cache $cookie_session;
      proxy_buffers 64 256k;
      proxy_buffer_size 128k;
      proxy_busy_buffers_size 256k;
      
      # If behind reverse proxy, forwards the correct IP
      set_real_ip_from 10.0.0.0/16;
      real_ip_header X-Forwarded-For;
      real_ip_recursive on;

      add_header 'Referrer-Policy' 'origin-when-cross-origin';
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;

}
